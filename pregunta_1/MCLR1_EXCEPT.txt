Grammar: 
    S -> I                                
    I -> try I catch I finally I 
      |  try I catch I          
      |  I ; I                      
      |  instr                     

Graph:
    from to, transition
    0 1, I
    0 2, try
    0 3, instr
    1 4, ;
    2 5, I
    2 6, try
    2 7, instr 
    4 8, I
    4 2, try
    4 3, instr
    5 9, catch
    5 10, ;
    6 11, I
    6 6, try
    6 7, instr
    9 12, I
    9 13, try
    9 14, instr
    10 15, I
    10 6, try
    10 7, instr
    11 16, catch
    11 10, ;
    12 17 finally
    12 18, ;
    13 19, I
    13 6, try
    13 7, instr
    15 10, ;
    16 20, I
    16 21, try
    16 22, instr
    17 23, I
    17 2, try
    17 3, instr
    18 24, I
    18 13, try
    18 14, instr
    19 25, catch
    19 10, ;
    20 26, finally
    20 27, ;
    21 28, I
    21 6, try
    21 7, ;
    23 4, ;
    24 18, ;
    25 29, I
    25 13, try
    25 14, instr
    26 30, I
    26 6, try
    26 7, instr
    27 31, I
    27 21, try
    27 22, instr
    28 32, catch
    28 10, ;
    29 33, finally
    29 18, ;
    30 10, ;
    31 27, ;
    31 34, I
    32 21, try
    32 21, instr
    33 35, I
    33 13, try
    33 14, instr
    34 36, finally
    34 27, ;
    35 18, ;
    36 37, I
    36 21, try
    36 22, instr
    37 27, ;




State 0:
    [S -> . I                       , $ ]  
    [I -> . try I catch I finally I , $, ; ] 
    [I -> . try I catch I           , $, ; ]
    [I -> . I ; I                   , $, ; ]  
    [I -> . instr                   , $, ; ] 

State 1:
    [ S -> I .                      , $ ]                   shift-reduce con las otras dos reglas de este estado                       
    [ I -> I . ; I                  , $, ; ] 

State 2:
    [I -> try . I catch I finally I , $, ; ]  
    [I -> try . I catch I           , $, ; ]
    [I -> . try I catch I finally I , catch, ; ]  
    [I -> . try I catch I           , catch, ; ] 
    [I -> . I ; I                   , catch, ; ] 
    [I -> . instr                   , catch, ; ] 

State 3:
    [I -> instr .                   , $, ; ]                                          

State 4:
    [ I -> I ; . I                  , $, ; ]                   
    [I -> . try I catch I finally I , $, ; ]  
    [I -> . try I catch I           , $, ; ]  
    [I -> . I ; I                   , $, ; ]  
    [I -> . instr                   , $, ; ]  

State 5:
    [I -> try I . catch I finally I , $, ; ] 
    [I -> try I . catch I           , $, ; ]
    [I -> I . ; I                   , catch, ; ] 

State 6:
    [I -> try . I catch I finally I , catch, ; ] 
    [I -> try . I catch I           , catch, ; ]
    [I -> . try I catch I finally I , catch, ; ]  
    [I -> . try I catch I           , catch, ; ]  
    [I -> . I ; I                   , catch, ; ] 
    [I -> . instr                   , catch, ; ] 

State 7:
    [I -> instr .                   , catch, ; ]                                          

State 8:
    [ I -> I ; I .                  , $, ; ]                                                  

State 9:
    [I -> try I catch . I finally I , $, ; ]   
    [I -> try I catch . I           , $, ; ]
    [I -> . try I catch I finally I , finally, $, ; ] 
    [I -> . try I catch I           , finally, $, ; ] 
    [I -> . I ; I                   , finally, $, ; ] 
    [I -> . instr                   , finally, $, ; ] 

State 10:
    [ I -> I ; . I                  , catch, ; ] 
    [I -> . try I catch I finally I , catch, ; ] 
    [I -> . try I catch I           , catch, ; ] 
    [I -> . I ; I                   , catch, ; ] 
    [I -> . instr                   , catch, ; ]

State 11:
    [I -> try I . catch I finally I , catch, ; ] 
    [I -> try I . catch I           , catch, ; ]
    [I -> I . ; I                   , catch, ; ] 

State 12:
    [I -> try I catch I . finally I , $, ; ] 
    [I -> try I catch I .           , $, ; ]                   shift-reduce con las otras reglas de este estado                       
    [I -> I . ; I                   , finally, $, ; ] 

State 13:
    [I -> try . I catch I finally I , finally, $, ; ] 
    [I -> try . I catch I           , finally, $, ; ]
    [I -> . try I catch I finally I , catch, ; ]  
    [I -> . try I catch I           , catch, ; ]  
    [I -> . I ; I                   , catch, ; ] 
    [I -> . instr                   , catch, ; ] 

State 14:
    [I -> instr .                   , finally, $, ; ]                                         

State 15:
    [ I -> I ; I .                  , catch, ; ]            shift-reduce con las otras reglas de este estado                           
    [I ->  I . ; I                  , catch, ; ] 

State 16:
    [I -> try I catch . I finally I , catch, ; ] 
    [I -> try I catch . I           , catch, ; ]
    [I -> . try I catch I finally I , finally, catch, ; ] 
    [I -> . try I catch I           , finally, catch, ; ] 
    [I -> . I ; I                   , finally, catch, ; ] 
    [I -> . instr                   , finally, catch, ; ]

State 17:
    [I -> try I catch I finally . I , $, ; ]
    [I -> . try I catch I finally I , $, ; ] 
    [I -> . try I catch I           , $, ; ] 
    [I -> . I ; I                   , $, ; ] 
    [I -> . instr                   , $, ; ]


State 18
    [I -> I ; . I                   , finally, $, ; ] 
    [I -> . try I catch I finally I , finally, $, ; ] 
    [I -> . try I catch I           , finally, $, ; ] 
    [I -> . I ; I                   , finally, $, ; ] 
    [I -> . instr                   , finally, $, ; ] 

State 19:
    [I -> try I . catch I finally I , finally, $, l ] 
    [I -> try I . catch I           , finally, $, l ]
    [I -> I . ; I                   , finally, $, l ] 

State 20:
    [I -> try I catch I . finally I , catch, ; ] 
    [I -> try I catch I .           , catch, ; ]                   shift-reduce                       
    [I -> I . ; I                   , finally, catch, ; ] 

State 21:
    [I -> try . I catch I finally I , finally, catch, ; ] 
    [I -> try . I catch I           , finally ]
    [I -> . try I catch I finally I , finally, catch, ; ]  
    [I -> . try I catch I           , finally, catch, ; ]  
    [I -> . I ; I                   , finally, catch, ; ] 
    [I -> . instr                   , finally, catch, ; ] 

State 22:
    [I -> instr .                   , finally, catch, ; ]                                          

State 23:
    [I -> try I catch I finally I . , $, ; ] 
    [I -> I . ; I                   , $, ; ] 

State 24:
    [I -> I ; I .                   , finally, $, ; ]             shift-reduce                         
    [I -> I . ; I                   , finally, $, ; ] 

State 25:
    [I -> try I catch . I finally I , finally, $, ; ] 
    [I -> try I catch . I           , finally, $, ; ]
    [I -> . try I catch I finally I , finally, $, ; ] 
    [I -> . try I catch I           , finally, $, ; ] 
    [I -> . I ; I                   , finally, $, ; ] 
    [I -> . instr                   , finally, $, ; ] 

State 26
    [I -> try I catch I finally . I , catch, ; ] 
    [I -> . try I catch I finally I , catch, ; ] 
    [I -> . try I catch I           , catch, ; ] 
    [I -> . I ; I                   , catch, ; ] 
    [I -> . instr                   , catch, ; ] 

State 27:
    [I -> I ; . I                   , finally, catch, ; ] 
    [I -> . try I catch I finally I , finally, catch, ; ] 
    [I -> . try I catch I           , finally, catch, ; ] 
    [I -> . I ; I                   , finally, catch, ; ] 
    [I -> . instr                   , finally, catch, ; ]

State 28:
    [I -> try I . catch I finally I , finally, catch. ; ] 
    [I -> I . ; I                   , finally, catch. ; ] 

State 29:
    [I -> try I catch I . finally I , finally, $, ; ] 
    [I -> try I catch I .           , finally, $, ; ]             shift-reduce                         
    [I -> I . ; I                   , finally, $, ; ] 

State 30
    [I -> try I catch I finally I . , catch, ; ]
    [I -> I . ; I                   , catch, ; ] 

State 31:
    [I -> I ; I .                   , finally, catch, ; ]                 shift-reduce                         
    [I -> I . ; I                   , finally, catch, ; ] 

State 32:
    [I -> try I catch . I finally I , finally, catch, ; ] 
    [I -> try I catch . I           , finally, catch, ; ]
    [I -> . try I catch I finally I , finally, catch, ; ] 
    [I -> . try I catch I           , finally, catch, ; ] 
    [I -> . I ; I                   , finally, catch, ; ] 
    [I -> . instr                   , finally, catch, ; ]


State 33:
    [I -> try I catch I finally . I , finally, $, ; ] 
    [I -> . try I catch I finally I , finally, $, ; ] 
    [I -> . try I catch I           , finally, $, ; ] 
    [I -> . I ; I                   , finally, $, ; ] 
    [I -> . instr                   , finally, $, ; ] 

State 34:
    [I -> try I catch I . finally I , finally, catch, ; ]
    [I -> try I catch I .           , finally, catch, ; ]       shift-reduce                         
    [I -> I . ; I                   , finally, catch, ; ] 

State 35:
    [I -> try I catch I finally I . , finally, $, ; ]           shift-reduce                
    [I -> I . ; I                   , finally, $, ; ] 

State 36:
    [I -> try I catch I finally . I , finally, catch, ; ] 
    [I -> . try I catch I finally I , finally, catch, ; ] 
    [I -> . try I catch I           , finally, catch, ; ] 
    [I -> . I ; I                   , finally, catch, ; ] 
    [I -> . instr                   , finally, catch, ; ] 
    
State 37:
    [I -> try I catch I finally I . , finally, catch, ; ]                 shift-reduce            
    [I -> I . ; I                   , finally, catch, ; ] 

----------------------------------------------------------------------------
----------------------------------------------------------------------------